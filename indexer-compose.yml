version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8081:8080" # Map the port your web server uses
    depends_on:
      - db
    environment:
      INDEXED_CHAINS: ${INDEXED_CHAINS}
      PASSPORT_SCORER_ID: ${PASSPORT_SCORER_ID}
      STORAGE_DIR: ${STORAGE_DIR}
      DEPLOYMENT_ENVIRONMENT: ${DEPLOYMENT_ENVIRONMENT}
      PORT: ${PORT}
      LOG_LEVEL: ${LOG_LEVEL}
      BUILD_TAG: ${BUILD_TAG}
      ENABLE_RESOURCE_MONITOR: ${ENABLE_RESOURCE_MONITOR}
      ESTIMATES_LINEARQF_WORKER_POOL_SIZE: ${ESTIMATES_LINEARQF_WORKER_POOL_SIZE}
      PINO_PRETTY: ${PINO_PRETTY}
      IPFS_GATEWAY: ${IPFS_GATEWAY}
      COINGECKO_API_KEY: ${COINGECKO_API_KEY}
      GRAPHILE_LICENSE: ${GRAPHILE_LICENSE}
      SEPOLIA_RPC_URL: ${SEPOLIA_RPC_URL}
      POLYGON_MUMBAI_RPC_URL: ${POLYGON_MUMBAI_RPC_URL}
      AVALANCHE_RPC_URL: ${AVALANCHE_RPC_URL}
      OPTIMISM_RPC_URL: ${OPTIMISM_RPC_URL}
      SENTRY_DSN: ${SENTRY_DSN}
      PGN_TESTNET_RPC_URL: ${PGN_TESTNET_RPC_URL}
      ARBITRUM_GOERLI_RPC_URL: ${ARBITRUM_GOERLI_RPC_URL}
      FANTOM_RPC_URL: ${FANTOM_RPC_URL}
      BASE_RPC_URL: ${BASE_RPC_URL}
      PGN_RPC_URL: ${PGN_RPC_URL}
      GOERLI_RPC_URL: ${GOERLI_RPC_URL}
      AVALANCHE_FUJI_RPC_URL: ${AVALANCHE_FUJI_RPC_URL}
      ARBITRUM_RPC_URL: ${ARBITRUM_RPC_URL}
      SEI_MAINNET_RPC_URL: ${SEI_MAINNET_RPC_URL}
      MAINNET_RPC_URL: ${MAINNET_RPC_URL}
      POLYGON_RPC_URL: ${POLYGON_RPC_URL}
      METIS_ANDROMEDA_RPC_URL: ${METIS_ANDROMEDA_RPC_URL}
      SCROLL_SEPOLIA_RPC_URL: ${SCROLL_SEPOLIA_RPC_URL}
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/grants_stack_indexer"

  index:
    build:
      context: .
      dockerfile: Dockerfile.index
    ports:
      - "8080:8080" # Map the port your web server uses
    depends_on:
      - db
    environment:
      INDEXED_CHAINS: ${INDEXED_CHAINS}
      PASSPORT_SCORER_ID: ${PASSPORT_SCORER_ID}
      STORAGE_DIR: ${STORAGE_DIR}
      DEPLOYMENT_ENVIRONMENT: ${DEPLOYMENT_ENVIRONMENT}
      PORT: ${PORT}
      LOG_LEVEL: ${LOG_LEVEL}
      BUILD_TAG: ${BUILD_TAG}
      ENABLE_RESOURCE_MONITOR: ${ENABLE_RESOURCE_MONITOR}
      ESTIMATES_LINEARQF_WORKER_POOL_SIZE: ${ESTIMATES_LINEARQF_WORKER_POOL_SIZE}
      PINO_PRETTY: ${PINO_PRETTY}
      IPFS_GATEWAY: ${IPFS_GATEWAY}
      COINGECKO_API_KEY: ${COINGECKO_API_KEY}
      GRAPHILE_LICENSE: ${GRAPHILE_LICENSE}
      SEPOLIA_RPC_URL: ${SEPOLIA_RPC_URL}
      POLYGON_MUMBAI_RPC_URL: ${POLYGON_MUMBAI_RPC_URL}
      AVALANCHE_RPC_URL: ${AVALANCHE_RPC_URL}
      OPTIMISM_RPC_URL: ${OPTIMISM_RPC_URL}
      SENTRY_DSN: ${SENTRY_DSN}
      PGN_TESTNET_RPC_URL: ${PGN_TESTNET_RPC_URL}
      ARBITRUM_GOERLI_RPC_URL: ${ARBITRUM_GOERLI_RPC_URL}
      FANTOM_RPC_URL: ${FANTOM_RPC_URL}
      BASE_RPC_URL: ${BASE_RPC_URL}
      PGN_RPC_URL: ${PGN_RPC_URL}
      GOERLI_RPC_URL: ${GOERLI_RPC_URL}
      AVALANCHE_FUJI_RPC_URL: ${AVALANCHE_FUJI_RPC_URL}
      ARBITRUM_RPC_URL: ${ARBITRUM_RPC_URL}
      SEI_MAINNET_RPC_URL: ${SEI_MAINNET_RPC_URL}
      MAINNET_RPC_URL: ${MAINNET_RPC_URL}
      POLYGON_RPC_URL: ${POLYGON_RPC_URL}
      METIS_ANDROMEDA_RPC_URL: ${METIS_ANDROMEDA_RPC_URL}
      SCROLL_SEPOLIA_RPC_URL: ${SCROLL_SEPOLIA_RPC_URL}
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/grants_stack_indexer"

  db:
    image: postgres:15 # Use the version of PostgreSQL you need
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: grants_stack_indexer
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
